apply plugin: 'com.android.application'

apply plugin: 'packer'

import org.tmatesoft.svn.core.wc.*

def getSvnRevision() {
    try {
        ISVNOptions options = SVNWCUtil.createDefaultOptions(true);
        SVNClientManager clientManager = SVNClientManager.newInstance(options);
        SVNStatusClient statusClient = clientManager.getStatusClient();
        SVNStatus status = statusClient.doStatus(projectDir, false);
        SVNRevision revision = status.getCommittedRevision();
        return revision.getNumber();
    } catch (e) {
        return "0";
    }
}

def getGitVersion() {
    try {
        def git = org.ajoberstar.grgit.Grgit.open();
        def gitVersionName = "${git.head().id}";
        return gitVersionName;
    }catch (Exception e){
        e.printStackTrace();
        return "0"
    }
}

def CVSVersionCode = "0";
//使用SVN管理代码打开这一段
CVSVersionCode = getSvnRevision();
if ("0".equalsIgnoreCase(CVSVersionCode.toString())){
    //使用Git管理代码打开这一段
    CVSVersionCode = getGitVersion();
}

def compileSdk = rootProject.ext.compileSdkVersion
def buildTools = rootProject.ext.buildToolsVersion
def buildSdk = rootProject.ext.buildSdkVersion

android {
    compileSdkVersion = compileSdk
    buildToolsVersion = buildTools

    defaultConfig {
        applicationId rootProject.ext.applicationId

        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        // Enabling multidex support
        multiDexEnabled true

        buildConfigField "String", "CVSVersionCode", "\"" + CVSVersionCode + "\""
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    signingConfigs {
        release {
            storeFile file("android.keystore")
            storePassword "android"
            keyAlias "android"
            keyPassword "android"
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
            //applicationIdSuffix ".debug"

            resValue "string", "app_name", rootProject.ext.appName
//            buildConfigField "String", "BASE_URL", "\"http://dev.starcredit.cn/\""
            buildConfigField "String", "BASE_URL", "\"http://10.138.60.113:8081/\""
            buildConfigField "String", "BASE_SERVER", "\"abook\""
        }

        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'proguard-fresco.pro'

            resValue "string", "app_name", rootProject.ext.appName
            buildConfigField "String", "BASE_URL", "\"http://10.138.60.113:8081/\""
            buildConfigField "String", "BASE_SERVER", "\"abook\""
        }

        dev {
            minifyEnabled release.minifyEnabled
            zipAlignEnabled release.zipAlignEnabled
            shrinkResources release.shrinkResources
            signingConfig release.signingConfig
            proguardFiles release.proguardFiles

            //applicationIdSuffix ".dev"
            versionNameSuffix "." + CVSVersionCode

            resValue "string", "app_name", rootProject.ext.appName + "-" + CVSVersionCode
//            buildConfigField "String", "BASE_URL", "\"http://dev.starcredit.cn/\""
            buildConfigField "String", "BASE_URL", "\"http://10.138.60.113:8081/\""
            buildConfigField "String", "BASE_SERVER", "\"abook\""
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            if (!variant.buildType.name.equals('debug')) {
                def outputFile = output.outputFile
                //这里修改文件名
                def fileName = rootProject.ext.projectName + ".apk"
                output.outputFile = new File(rootProject.buildDir.path, fileName)
            }
        }
    }

    File propFile = file('../config/signing.properties');
    if (propFile.exists()) {
        def Properties props = new Properties()
        props.load(new FileInputStream(propFile))
        if (props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
                props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
            android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
            android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
            android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
            android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
        } else {
            android.buildTypes.release.signingConfig = null
        }
    } else {
        android.buildTypes.release.signingConfig = null
    }
}

packer {
    // 指定渠道打包输出目录
    archiveOutput = file(new File(project.rootDir.path, "release/" + CVSVersionCode))
    // 指定渠道打包输出文件名格式
    archiveNameFormat = '${projectName}-${flavorName}-${buildType}-v${versionName}-${versionCode}-${buildTime}-${fileMD5}-' + CVSVersionCode
    //是否检查Gradle配置中的signingConfig
    checkSigningConfig = true
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'

    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1' // or 1.4-beta2
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1' // or 1.4-beta2
    devCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1' // or 1.4-beta2
    provided "org.projectlombok:lombok:1.12.6"
    compile "com.android.support:appcompat-v7:${buildSdk}"
    compile "com.android.support:recyclerview-v7:${buildSdk}"
    compile "com.android.support:design:${buildSdk}"
    compile "com.android.support:support-v4:${buildSdk}"
    compile 'com.android.volley:volley:1.0.0'
    compile 'com.google.code.gson:gson:2.6.2'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.facebook.fresco:fresco:0.9.0'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.umeng.analytics:analytics:5.6.1'
    compile 'com.zhy:percent-support-extends:1.1.1'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'com.klinkerapps:link_builder:1.3.2@aar'
    compile 'com.github.shibenli:DateTimePicker:v0.0.5'
    compile 'com.github.siyamed:android-shape-imageview:0.9.3@aar'
    compile 'org.greenrobot:eventbus:3.0.0'

    //多渠道打包
    compile 'com.mcxiaoke.gradle:packer-helper:1.0.5'
}
